<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>利用VS2010和CMake编译OpenCV2.4.11</title>
      <link href="/2016/02/29/%E5%88%A9%E7%94%A8VS2010%E5%92%8CCMake%E7%BC%96%E8%AF%91OpenCV2.4.11/"/>
      <url>/2016/02/29/%E5%88%A9%E7%94%A8VS2010%E5%92%8CCMake%E7%BC%96%E8%AF%91OpenCV2.4.11/</url>
      
        <content type="html"><![CDATA[<h2 id="配置开发环境"><a href="#配置开发环境" class="headerlink" title="配置开发环境"></a>配置开发环境</h2><h3 id="下载与安装"><a href="#下载与安装" class="headerlink" title="下载与安装"></a>下载与安装</h3><ol><li><a href="http://opencv.org/downloads.html" target="_blank" rel="noopener">OpenCV2.4.11</a></li><li><a href="https://cmake.org/download/" target="_blank" rel="noopener">CMake</a></li></ol><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><ol><li>在系统属性-环境变量-用户变量中新建变量，名为opencv，值为自己解压opencv路径下的build路径，如“D:\opencv\build”（路径名尽量不含空格，方便以后Matlab与OpenCV混合编程）</li><li>在系统属性-环境变量-系统变量中编辑Path变量，在末尾添加“ %opencv%\x86\vc10\bin;%opencv%\x64\vc10\bin”</li><li>编写OpenCV的工程属性表：在D:\opencv下新建文件opencv2411.props，编辑内容为：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;Project ToolsVersion=&quot;4.0&quot; xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&gt;</span><br><span class="line">  &lt;ImportGroup Label=&quot;PropertySheets&quot; /&gt;</span><br><span class="line">  &lt;PropertyGroup Label=&quot;UserMacros&quot; /&gt;</span><br><span class="line">  &lt;PropertyGroup&gt;</span><br><span class="line">    &lt;IncludePath&gt;$(OPENCV)\include;$(IncludePath)&lt;/IncludePath&gt;</span><br><span class="line">    &lt;LibraryPath Condition=&quot;&apos;$(Platform)&apos;==&apos;Win32&apos;&quot;&gt;$(OPENCV)\x86\vc10\lib;$(LibraryPath)&lt;/LibraryPath&gt;</span><br><span class="line">    &lt;LibraryPath Condition=&quot;&apos;$(Platform)&apos;==&apos;X64&apos;&quot;&gt;$(OPENCV)\x64\vc10\lib;$(LibraryPath)&lt;/LibraryPath&gt;</span><br><span class="line">  &lt;/PropertyGroup&gt;</span><br><span class="line">  &lt;ItemDefinitionGroup&gt;</span><br><span class="line">    &lt;Link Condition=&quot;&apos;$(Configuration)&apos;==&apos;Debug&apos;&quot;&gt;</span><br><span class="line">      &lt;AdditionalDependencies&gt;</span><br><span class="line">        opencv_calib3d2411d.lib;opencv_contrib2411d.lib;opencv_core2411d.lib;</span><br><span class="line">        opencv_features2d2411d.lib;opencv_flann2411d.lib;opencv_gpu2411d.lib;opencv_highgui2411d.lib;</span><br><span class="line">        opencv_imgproc2411d.lib;opencv_legacy2411d.lib;opencv_ml2411d.lib;opencv_nonfree2411d.lib;</span><br><span class="line">        opencv_objdetect2411d.lib;opencv_ocl2411d.lib;opencv_photo2411d.lib;opencv_stitching2411d.lib;</span><br><span class="line">        opencv_superres2411d.lib;opencv_ts2411d.lib;opencv_video2411d.lib;opencv_videostab2411d.lib;</span><br><span class="line">        %(AdditionalDependencies)</span><br><span class="line">      &lt;/AdditionalDependencies&gt;</span><br><span class="line">    &lt;/Link&gt;</span><br><span class="line">    &lt;Link Condition=&quot;&apos;$(Configuration)&apos;==&apos;Release&apos;&quot;&gt;</span><br><span class="line">      &lt;AdditionalDependencies&gt;</span><br><span class="line">        opencv_calib3d2411.lib;opencv_contrib2411.lib;opencv_core2411.lib;opencv_features2d2411.lib;</span><br><span class="line">        opencv_flann2411.lib;opencv_gpu2411.lib;opencv_highgui2411.lib;opencv_imgproc2411.lib;opencv_legacy2411.lib;</span><br><span class="line">        opencv_ml2411.lib;opencv_nonfree2411.lib;opencv_objdetect2411.lib;opencv_ocl2411.lib;opencv_photo2411.lib;</span><br><span class="line">        opencv_stitching2411.lib;opencv_superres2411.lib;opencv_ts2411.lib;opencv_video2411.lib;opencv_videostab2411.lib;</span><br><span class="line">        %(AdditionalDependencies)</span><br><span class="line">      &lt;/AdditionalDependencies&gt;</span><br><span class="line">    &lt;/Link&gt;</span><br><span class="line">  &lt;/ItemDefinitionGroup&gt;</span><br><span class="line">  &lt;ItemGroup /&gt;</span><br><span class="line">&lt;/Project&gt;</span><br></pre></td></tr></table></figure></li></ol><h2 id="利用CMake编译OpenCV2-4-11"><a href="#利用CMake编译OpenCV2-4-11" class="headerlink" title="利用CMake编译OpenCV2.4.11"></a>利用CMake编译OpenCV2.4.11</h2><ol><li>打开CMake软件，根据实际情况设置Where is the source code和Where to build为相应路径，如：<img src="./uploads/cmake.png" alt="Cmake编译OpenCV"></li><li>依次点击Configure和Generate</li></ol><h2 id="载入OpenCV工程和添加测试项目"><a href="#载入OpenCV工程和添加测试项目" class="headerlink" title="载入OpenCV工程和添加测试项目"></a>载入OpenCV工程和添加测试项目</h2><ol><li>点击OpenCV工程目录下的OpenCV.sln</li><li>右键解决方案资源管理器中的解决方案，选择添加-现有项目，在目录中选择测试项目的工程文件如cvut_test下的cvut_test.vcxproj，然后将cvut_test项目设为启动项目<img src="./uploads/cvut_test.png" alt="添加cvut_test项目"></li><li>右键属性管理器中的cvut_test，选择添加现有属性表，在目录中选择OpenCV的工程属性表如D:\opencv下的opencv2411.props</li><li>之后就可以方便地执行测试项目和查看其调用的OpenCV源码了</li></ol><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="http://blog.csdn.net/hnyzwtf/article/details/46403619" target="_blank" rel="noopener">win7 64位下VS2010和opencv 2.4.11的配置</a></li><li><a href="http://www.nmtree.net/2014/03/19/windows_build-opencv-with-cmake-and-vs2013.html" target="_blank" rel="noopener">Windows下利用CMake和VS2013编译OpenCV</a></li><li><a href="http://blog.sina.com.cn/s/blog_8b6c17eb0101l7zd.html" target="_blank" rel="noopener">opencv + cmake + vs2010 配置过程</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VS2010 </tag>
            
            <tag> CMake </tag>
            
            <tag> OpenCV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Github+Hexo+Next搭建个人博客</title>
      <link href="/2016/01/28/%E4%BD%BF%E7%94%A8Github-Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2016/01/28/%E4%BD%BF%E7%94%A8Github-Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="配置开发环境"><a href="#配置开发环境" class="headerlink" title="配置开发环境"></a>配置开发环境</h1><p>依次下载安装：</p><ul><li><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">Node.js</a></li><li><a href="http://git-scm.com/download/" target="_blank" rel="noopener">Git</a></li></ul><h1 id="注册Github新建个人项目"><a href="#注册Github新建个人项目" class="headerlink" title="注册Github新建个人项目"></a>注册Github新建个人项目</h1><ol><li>新建一个Repository，将Repository name改为yourname.github.io，然后点击Create repository</li><li>在本地目标文件夹中右键选择Git Bash Here开始配置SSH-Key<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/.ssh</span><br><span class="line">$ ssh-keygen -t rsa -C <span class="string">"your e-mail"</span></span><br><span class="line">$ clip &lt; ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure></li><li>然后将其添加到Github的Settings-SSH keys中，之后就可以暂时关掉Github的网页了</li></ol><h1 id="通过Hexo框架部署网站"><a href="#通过Hexo框架部署网站" class="headerlink" title="通过Hexo框架部署网站"></a>通过Hexo框架部署网站</h1><ol><li>使用 git clone <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:cyliuu/cyliuu.github.io.git 拷贝Repository到本地，然后在克隆后的本地文件夹内右键选择Git Bash Here开始初始化Hexo框架<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br><span class="line">$ npm install</span><br><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li>将_config.yml中倒数第二行的repo替换成你的</li><li>做完以上的步骤，你的博客其实已经搭建好了，你只需要把一些个人信息替换掉就行了</li></ol><h1 id="更换Next主题"><a href="#更换Next主题" class="headerlink" title="更换Next主题"></a>更换Next主题</h1><ol><li>由于我的模版里已经帮你下载好了，所以你的主要操作就是将theme/next/_config.yml中的个人信息替换成你的就行了</li><li>你可以像我一样引入多说评论接口，便于和网友们交流</li><li>接着再开启RSS订阅<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure></li><li>然后是生成本地网页<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></li><li>通过 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 本地接口访问网页，如果没有问题就可以发布了</li></ol><h1 id="使用Git上传和发布项目"><a href="#使用Git上传和发布项目" class="headerlink" title="使用Git上传和发布项目"></a>使用Git上传和发布项目</h1><ol><li>上传项目到缓存区<br>在本地文件夹内右键选择Git Bash Here，依次执行：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">"# yourname.github.io"</span> &gt;&gt; README.md</span><br><span class="line">$ git init</span><br><span class="line">$ git add .</span><br><span class="line">$ git commit -m <span class="string">"initial commit"</span></span><br><span class="line">$ git remote add origin https://github.com/yourname/yourname.github.io.git</span><br></pre></td></tr></table></figure></li><li>新建分支，将项目由缓存区上传到Github中<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git branch hexo</span><br><span class="line">$ git checkout hexo</span><br><span class="line">$ git push -u origin hexo</span><br></pre></td></tr></table></figure></li><li>部署网站<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></li><li>现在你可以通过 <a href="http://yourname.github.io/" target="_blank" rel="noopener">http://yourname.github.io/</a> 访问你的个人博客了</li><li>日常管理<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br><span class="line">$ git commit -m <span class="string">"..."</span></span><br><span class="line">$ git push origin hexo</span><br><span class="line">$ hexo generate --deploy</span><br></pre></td></tr></table></figure></li><li>本地数据丢失<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> git@github.com:yourname/yourname.github.io.git</span><br><span class="line">$ npm install -g hexo-cli</span><br><span class="line">$ npm install</span><br><span class="line">$ npm install hexo-deployer-git</span><br><span class="line">$ npm install hexo-generator-feed</span><br></pre></td></tr></table></figure></li></ol><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="http://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/" target="_blank" rel="noopener">GitHub Pages + Hexo搭建博客</a></li><li><a href="http://moyatao.github.io/2015/11/04/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%EF%BC%9AGitHub-Hexo%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B/#more" target="_blank" rel="noopener">我的第一篇博客：GitHub+Hexo搭建博客过程</a></li><li><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">Next主题</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
